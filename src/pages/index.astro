---
import AIImageGenerator from '../components/AIImageGenerator/AIImageGenerator.astro';
import '../styles/global.css';
---

<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI Image Generator</title>
    
    <!-- Konva.js CDN - Using stable version -->
    <script src="https://unpkg.com/konva@9.3.14/konva.min.js"></script>
</head>
<body>
    <AIImageGenerator />
    
    <!-- Load scripts in order - use correct paths for Astro -->
    <script type="module" src="/scripts/canvasManager.js"></script>
    <script type="module" src="/scripts/imageGenerator.js"></script>
    
    <script type="module">
        // Enhanced generate button functionality to work with canvas
        document.addEventListener('DOMContentLoaded', function() {
            const generateButton = document.getElementById('generate-btn');
            const promptTextarea = document.getElementById('prompt-textarea');
            
            generateButton?.addEventListener('click', async function() {
                if (!this.classList.contains('disabled')) {
                    const prompt = promptTextarea?.value || 'A beautiful landscape';
                    
                    this.classList.add('disabled');
                    this.innerHTML = `
                        <div class="flex items-center justify-center w-full">
                            <div class="animate-spin rounded-full border-b-2 border-white mr-2" style="height: 16px; width: 16px;"></div>
                            <span>Generating...</span>
                        </div>
                    `;
                    
                    try {
                        // Simulate AI generation with a placeholder image
                        await simulateImageGeneration(prompt);
                    } catch (error) {
                        console.error('Generation failed:', error);
                    } finally {
                        // Reset button
                        this.classList.remove('disabled');
                        this.innerHTML = `
                            <div class="flex items-center">
                                <span class="mr-1">4</span>
                                <svg width="12" height="12" fill="none" viewBox="0 0 24 24">
                                    <path fill="currentColor" d="m5 9.415 1.414-1.414 5.293 5.293L17 8l1.414 1.414-6.707 6.707z"/>
                                </svg>
                            </div>
                            <div style="width: 1px; height: 24px; background: rgba(255,255,255,0.2);"></div>
                            <div class="flex-1 flex justify-center items-center">
                                <span>Generate</span>
                                <div class="ml-2 flex items-center">
                                    <svg width="16" height="16" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <polyline points="13.18 1.37 13.18 9.64 21.45 9.64 10.82 22.63 10.82 14.36 2.55 14.36 13.18 1.37"/>
                                    </svg>
                                    <span class="ml-1">36</span>
                                </div>
                            </div>
                        `;
                    }
                }
            });
            
            async function simulateImageGeneration(prompt) {
                return new Promise((resolve) => {
                    setTimeout(() => {
                        // Generate a placeholder image using a service like picsum or create a colored rectangle
                        const imageUrl = `https://picsum.photos/512/512?random=${Date.now()}`;
                        
                        // Add the generated image to canvas
                        if (window.canvasManager) {
                            window.canvasManager.addGeneratedImage(imageUrl, 512, 512);
                        }
                        
                        resolve(imageUrl);
                    }, 3000);
                });
            }
        });
    </script>
</body>
</html>